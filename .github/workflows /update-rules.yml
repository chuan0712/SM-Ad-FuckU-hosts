name: Update Adblock Rules

on:
  schedule:
    - cron: '0 21 */3 * *' # 每三天在北京时间 05:00 执行 (UTC 21:00)
  workflow_dispatch:  # 支持手动触发更新

jobs:
  process_and_commit:
    runs-on: ubuntu-latest
    steps:
      - name: 1. 检出代码
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 2. 下载原始规则文件并执行处理
        # 设置 id 为 process，以便后续步骤可以引用其输出
        id: process
        run: |
          # --- 定义变量 ---
          ORIGINAL_URL="https://raw.githubusercontent.com/2Gardon/SM-Ad-FuckU-hosts/refs/heads/master/SMAdHosts"
          INPUT_FILE="SMAdHosts"
          OUTPUT_FILE="adblock-rules.txt"
          
          echo "开始下载原始文件..."
          
          # 1. 使用 curl 下载原始文件
          curl -sSLo ${INPUT_FILE} "${ORIGINAL_URL}"
          
          echo "文件下载完成，开始使用 AWK 脚本进行处理..."
          
          # 2. 使用 AWK 脚本实现过滤和转换逻辑
          awk '
              /^$|^#/ { print $0; next }
              $1 == "0.0.0.0" { print "||" $2 "^  " $3; next }
          ' ${INPUT_FILE} > ${OUTPUT_FILE}
          
          echo "规则处理完成。"
          
          # 3. 【核心修改】生成当前时间戳并将其作为 output 传递给下一步骤
          COMMIT_TIME=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S %Z')
          echo "COMMIT_TIME=${COMMIT_TIME}" >> $GITHUB_OUTPUT
          echo "生成的提交时间戳为: ${COMMIT_TIME}"

      - name: 3. 检查是否有更改并自动提交
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: 'adblock-rules.txt'
          # 【核心修改】使用上一步骤 (id: process) 输出的 COMMIT_TIME 变量
          commit_message: "Update Adblock rules：${{ steps.process.outputs.COMMIT_TIME }}"
          branch: ${{ github.ref_name }}
